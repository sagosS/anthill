import urllib.request

usd_i = 1
eur_i = 2

url = urllib.request.urlopen("https://www.ueex.com.ua/informer_ugd.js?lang=rus&n=3&encoding=utf&&width=300").read()


def torgi_query(query):
    list_req = str(url.decode('utf-8')).split(");")

    usd2 = list_req[7]
    eur2 = list_req[8]

    a95a = list_req[10]
    a95p = list_req[11]

    a92a = list_req[12]
    a92p = list_req[13]

    disela = list_req[14]
    diselp = list_req[15]

    lpg_t = list_req[16]
    lpg_u = list_req[17]
    lpg_b = list_req[18]
    lpg_y = list_req[19]
    lpg_s = list_req[20]

    if query == 'valuta':
        return [usd2, eur2]
    elif query == 'toplivo':
        return [a92a, a92p, a95a, a95p, disela, diselp]
    elif query == 'lpg':
        return [lpg_t, lpg_u, lpg_b, lpg_y, lpg_s]
    elif query == 'all':
        return [usd2, eur2, a95a, a95p, a92a, a92p, disela, diselp, lpg_t, lpg_u, lpg_b, lpg_y, lpg_s]


def ink_val(str_v, i, col, dec):
    val = (str(str_v).split('<span>')[i][:col]).replace(" ", "").replace(",", ".")
    return "{:.2f}".format(float(val) / dec)


def return_valuta():
    resulr = torgi_query('valuta')
    return f"üßê–ö–æ—Ç–∏—Ä–æ–≤–∫–∞ –≤–∞–ª—é—Ç:\n" \
        f"‚ñ™USD: {ink_val(resulr[0], 1, 8, 100)}–≥—Ä–Ω.\n" \
        f"‚ñ™EUR: {ink_val(resulr[1], 1, 8, 100)}–≥—Ä–Ω."


def return_toplivo():
    resulr = torgi_query('toplivo')
    return f"–¢–æ—Ä–≥–∏ —Ç–æ–ø–ª–∏–≤–æ:\n\n" \
        f"–∞92\t\t\t\t\t\t(–∞):\t\t\t{ink_val(resulr[0], 1, 8, 1000)}–≥—Ä–Ω.\n" \
        f"–∞92\t\t\t\t\t\t(–∂):\t\t{ink_val(resulr[1], 1, 8, 1000)}–≥—Ä–Ω.\n"\
        f"–∞95\t\t\t\t\t\t(–∞):\t\t\t{ink_val(resulr[2], 1, 8, 1000)}–≥—Ä–Ω.\n" \
        f"–∞95\t\t\t\t\t\t(–∂):\t\t{ink_val(resulr[3], 1, 8, 1000)}–≥—Ä–Ω.\n"\
        f"DISEL\t\t(–∞):\t\t\t{ink_val(resulr[4], 1, 8, 1000)}–≥—Ä–Ω.\n" \
        f"DISEL\t\t(–∂):\t\t{ink_val(resulr[5], 1, 8, 1000)}–≥—Ä–Ω.\n\n" \
        f"a - –¥–æ—Å—Ç–∞–≤–∫–∞ –∞–≤—Ç–æ –ø—É—Ç—ë–º\n" \
        f"–∂ - –¥–æ—Å—Ç–∞–≤–∫–∞ –∂/–¥ –ø—É—Ç—ë–º"


def return_lpg():
    resulr = torgi_query('lpg')
    return f"–ì–∞–∑ –¥–ª—è –∑–∞–ø—Ä–∞–≤–æ–∫ –£–∫—Ä–∞–∏–Ω—ã:\n\n" \
        f"–¢–∏–º–æ—Ñ–µ–µ–≤—Å–∫–∞—è:\t\t{ink_val(resulr[0], 1, 8, 1000)}–≥—Ä–Ω.\n" \
        f"–Æ–ª—å—á–µ–≤—Å–∫–∏–π:\t\t\t\t{ink_val(resulr[1], 1, 8, 1000)}–≥—Ä–Ω.\n" \
        f"–ë–∞–∑–∏–ª–µ–≤—â–∏–Ω–∞:\t\t\t{ink_val(resulr[2], 1, 8, 1000)}–≥—Ä–Ω.\n" \
        f"–Ø–±–ª–æ–Ω–æ–≤—Å–∫–æ–µ:\t\t\t{ink_val(resulr[3], 1, 8, 1000)}–≥—Ä–Ω.\n" \
        f"–®–µ–±–µ–ª–∏–Ω—Å–∫–æ–µ:\t\t{ink_val(resulr[4], 1, 8, 1000)}–≥—Ä–Ω."


def info_gas():
    info_str = \
        '"–¢" \n –¢–∏–º–æ—Ñ–µ–µ–≤—Å–∫–∞—è –£–£–í–£ –ì–ü–£\n "–ü—Ä–ª—Ç–∞–≤–≥–∞–∑–¥–æ–±—ã—á–∞"\n\n' \
        '"–Æ" \n –Æ–ª—å—á–µ–≤—Å–∫–∏–π –¶–ü–î–ö–ì –ì–ü–£\n "–®–µ–±–µ–ª–∏–Ω–∫–∞–≥–∞–∑–¥–æ–±—ã—á–∞"\n\n' \
        '"–ë" \n –¢–¶–°–ö "–ë–∞–∑–∏–ª–µ–≤—â–∏–Ω–∞" –£–ü\n\n' \
        '"–Ø" \n –Ø–±–ª–æ–Ω–æ–≤—Å–∫–æ–µ –û–ü\n –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–µ\n\n' \
        '"–®" \n –û–ü–ì–ö–ù –®–µ–±–µ–ª–∏–Ω—Å–∫–æ–µ –£–ü'

    return info_str
